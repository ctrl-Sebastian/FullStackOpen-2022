{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebas\\\\Desktop\\\\Programming\\\\Cincinnatus\\\\FullStackOpen-2022\\\\temporal\\\\src\\\\App.js\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const hook = () => {\n    console.log('effect');\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  };\n  useEffect(hook, []);\n  console.log('render', notes.length, 'notes');\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date(),\n      important: Math.random() < 0.5\n    };\n    axios.post('http://localhost:3001/notes', noteObject).then(response => {\n      setNotes(notes.concat(noteObject));\n      setNewNote('');\n    });\n  };\n  const toggleImportanceOf = id => {\n    console.log('importance of ' + id + ' needs to be toggled');\n  };\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\nexport default App;","map":{"version":3,"names":["useState","useEffect","axios","Note","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","hook","console","log","get","then","response","data","length","notesToShow","filter","note","important","addNote","event","preventDefault","noteObject","content","date","Date","Math","random","post","concat","toggleImportanceOf","id","handleNoteChange","target","value","map"],"sources":["C:/Users/sebas/Desktop/Programming/Cincinnatus/FullStackOpen-2022/temporal/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport Note from './components/Note'\r\n\r\nconst App = (props) => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n\r\n  const hook =  () => {\r\n    console.log('effect')\r\n    axios\r\n      .get('http://localhost:3001/notes')\r\n      .then(response => {\r\n        console.log('promise fulfilled')\r\n        setNotes(response.data)\r\n      })\r\n  }\r\n  useEffect(hook, [])\r\n  \r\n  console.log('render', notes.length, 'notes')\r\n\r\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = { \r\n      content: newNote,\r\n      date: new Date(),\r\n      important: Math.random() < 0.5,\r\n    }\r\n\r\n    axios\r\n    .post('http://localhost:3001/notes', noteObject)\r\n    .then(response => {\r\n      setNotes(notes.concat(noteObject))\r\n      setNewNote('') \r\n    })\r\n\r\n\r\n  }\r\n  \r\n  const toggleImportanceOf = (id) => {\r\n    console.log('importance of ' + id + ' needs to be toggled')\r\n  }\r\n\r\n  const handleNoteChange = (event) => {        \r\n    setNewNote(event.target.value)  \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      \r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }\r\n        </button>\r\n      </div>\r\n\r\n      <ul>\r\n        {notesToShow.map(note => \r\n          <Note \r\n            key={note.id} \r\n            note={note} \r\n            toggleImportance={() => toggleImportanceOf(note.id)}/>\r\n        )}\r\n      </ul>\r\n\r\n      <form onSubmit={addNote}>\r\n        <input \r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n          />\r\n        <button type=\"submit\">save</button>\r\n      </form>   \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}